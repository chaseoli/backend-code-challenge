# convert to json via `$ js-yaml tsoa.yml > tsoa.json` see https://github.com/nodeca/js-yaml

# convert from swagger to postman to openAPI etc., see https://www.apimatic.io/

# https://github.com/lukeautry/tsoa
entryFile: ./src/app.ts
spec: 
  specVersion: 3
  description: "Login at [https://pokemon-dcb38.web.app/secure/auth](https://pokemon-dcb38.web.app/secure/auth) to obtain user auth token"
  outputDirectory: ./def  # output from '$ tsoa spec'
  # host: 'https://pokemon-dcb38.uc.r.appspot.com'
  name: Quantum Pokemon
  spec: 
    servers: 
      - url: https://pokemon-dcb38.uc.r.appspot.com
        description: Live running API instance in the cloud
      - url: http://localhost:8080
        description: Locally running API instance 
  
  # https://github.com/lukeautry/tsoa#authentication
  securityDefinitions:
    api_key: 
      description: A key used to restrict access and apply quotas (TODO needs implementation...)
      type: apiKey
      in: header
      name: X-key
    user: 
      description: Requires a user authentication token. Authenticate at https://pokemon-dcb38.web.app/secure/auth for token.
      # use apiKey since defining custom header 
      # see https://swagger.io/docs/specification/authentication/api-keys/
      type: apiKey
      in: header
      name: X-auth
    live_auth: 
      description: Used to test middleware
      type: apiKey
      name: X-auth
      in: header
      # scopes: 
      #   read: demonstrates usage of a scope
routes: 
  routesDir: ./src
  middleware: express
  authenticationModule: ./src/middleware/authentication.ts

# tsoa takes info from package.json
# # https://swagger.io/docs/specification/basic-structure/
# info: 
#   title: pokemon
#   version: 1.0.0
#   description: pokemon API

# see https://swagger.io/docs/specification/api-host-and-base-path/ for definition in tsoa

# NOTE: tsoa currently doesn't follow the spec to override 'securitySchemes' for auth
# # https://swagger.io/docs/specification/authentication/
# components:
#   securitySchemes:
   
     